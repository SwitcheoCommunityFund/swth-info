declare global {
    interface Window {
        chrome: any;
        opr: any;
        google: any;
    }
    interface Navigator {
        hid: Object;
    }
}
export default class Ledger {
    private readonly testModeAllowed;
    private cosmosApp;
    private hdPath;
    private hrp;
    platform: string;
    userAgent: string;
    constructor({ testModeAllowed }?: {
        testModeAllowed: Boolean;
    }, hdPath?: Array<number>, hrp?: string);
    testDevice(): Promise<this>;
    private isReady;
    connect(timeout?: number): Promise<this>;
    getCosmosAppVersion(): Promise<string>;
    isCosmosAppOpen(): Promise<void>;
    getOpenApp(): Promise<any>;
    getPubKey(): Promise<any>;
    getCosmosAddress(): Promise<any>;
    confirmLedgerAddress(): Promise<void>;
    sign(signMessage: string): Promise<Uint8Array>;
    private checkLedgerErrors;
}
export declare const checkAppMode: (testModeAllowed: Boolean, testMode: Boolean) => void;
