"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseChannelId = exports.generateChannelId = void 0;
var types_1 = require("./types");
exports.generateChannelId = function (params) {
    switch (params.channel) {
        case types_1.WSChannel.candlesticks: {
            var _a = params, channel = _a.channel, market = _a.market, resolution = _a.resolution;
            return [channel, market, resolution].join('.');
        }
        case types_1.WSChannel.books: {
            var _b = params, channel = _b.channel, market = _b.market;
            return [channel, market].join('.');
        }
        case types_1.WSChannel.recent_trades: {
            var _c = params, channel = _c.channel, market = _c.market;
            return [channel, market].join('.');
        }
        case types_1.WSChannel.orders: {
            var _d = params, channel = _d.channel, address = _d.address;
            return [channel, address].join('.');
        }
        case types_1.WSChannel.orders_by_market: {
            var _e = params, channel = _e.channel, market = _e.market, address = _e.address;
            return [channel, market, address].join('.');
        }
        case types_1.WSChannel.balances: {
            var _f = params, channel = _f.channel, address = _f.address;
            return [channel, address].join('.');
        }
        case types_1.WSChannel.account_trades: {
            var _g = params, channel = _g.channel, address = _g.address;
            return [channel, address].join('.');
        }
        case types_1.WSChannel.account_trades_by_market: {
            var _h = params, channel = _h.channel, market = _h.market, address = _h.address;
            return [channel, market, address].join('.');
        }
        case types_1.WSChannel.market_stats: {
            var channel = params.channel;
            return [channel].join('.');
        }
        case types_1.WSChannel.market_stats_by_market: {
            var _j = params, channel = _j.channel, market = _j.market;
            return [channel, market].join('.');
        }
        case types_1.WSChannel.leverages: {
            var _k = params, channel = _k.channel, address = _k.address;
            return [channel, address].join('.');
        }
        case types_1.WSChannel.leverages_by_market: {
            var _l = params, channel = _l.channel, market = _l.market, address = _l.address;
            return [channel, market, address].join('.');
        }
        case types_1.WSChannel.positions: {
            var _m = params, channel = _m.channel, address = _m.address;
            return [channel, address].join('.');
        }
        case types_1.WSChannel.positions_by_market: {
            var _o = params, channel = _o.channel, market = _o.market, address = _o.address;
            return [channel, market, address].join('.');
        }
        default:
            throw new Error("invalid subscription channel: " + params.channel);
    }
};
exports.parseChannelId = function (rawChannelId) {
    var _a = rawChannelId.split('.'), channel = _a[0], market = _a[1], resolution = _a[2], address = _a[3];
    switch (channel) {
        case types_1.WSChannel.candlesticks:
            return {
                channel: channel,
                market: market,
                resolution: resolution,
            };
        case types_1.WSChannel.books:
            return {
                channel: channel,
                market: market,
            };
        case types_1.WSChannel.recent_trades:
            return {
                channel: channel,
                market: market,
            };
        case types_1.WSChannel.orders:
            return {
                channel: channel,
                address: address,
            };
        case types_1.WSChannel.orders_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case types_1.WSChannel.balances:
            return {
                channel: channel,
                address: address,
            };
        case types_1.WSChannel.account_trades:
            return {
                channel: channel,
                address: address,
            };
        case types_1.WSChannel.account_trades_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case types_1.WSChannel.market_stats:
            return {
                channel: channel,
            };
        case types_1.WSChannel.market_stats_by_market:
            return {
                channel: channel,
                market: market,
            };
        case types_1.WSChannel.leverages:
            return {
                channel: channel,
                address: address,
            };
        case types_1.WSChannel.leverages_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case types_1.WSChannel.positions:
            return {
                channel: channel,
                address: address,
            };
        case types_1.WSChannel.positions_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        default:
            throw new Error('Error parsing channelId');
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbm5lbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvd2Vic29ja2V0L2NoYW5uZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBT2dCO0FBRUgsUUFBQSxpQkFBaUIsR0FBRyxVQUFDLE1BQTRCO0lBQzVELFFBQVEsTUFBTSxDQUFDLE9BQU8sRUFBRTtRQUN0QixLQUFLLGlCQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDckIsSUFBQSxLQUFrQyxNQUF1QyxFQUF2RSxPQUFPLGFBQUEsRUFBRSxNQUFNLFlBQUEsRUFBRSxVQUFVLGdCQUE0QyxDQUFBO1lBQy9FLE9BQU8sQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtTQUMvQztRQUNELEtBQUssaUJBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNkLElBQUEsS0FBc0IsTUFBZ0MsRUFBcEQsT0FBTyxhQUFBLEVBQUUsTUFBTSxZQUFxQyxDQUFBO1lBQzVELE9BQU8sQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQ25DO1FBQ0QsS0FBSyxpQkFBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RCLElBQUEsS0FBc0IsTUFBdUMsRUFBM0QsT0FBTyxhQUFBLEVBQUUsTUFBTSxZQUE0QyxDQUFBO1lBQ25FLE9BQU8sQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQ25DO1FBQ0QsS0FBSyxpQkFBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2YsSUFBQSxLQUF1QixNQUFpQyxFQUF0RCxPQUFPLGFBQUEsRUFBRSxPQUFPLGFBQXNDLENBQUE7WUFDOUQsT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7U0FD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