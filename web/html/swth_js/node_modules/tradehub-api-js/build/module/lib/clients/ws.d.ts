/// <reference types="node" />
import { EventEmitter } from 'events';
/**
 * @deprecated use WSConnector
 */
export declare enum MarketEvent {
    SUB_MARKET_STATS = "market:sub:market_stats"
}
/**
 * @deprecated use WSConnector
 */
export declare enum ClientEvent {
    Connected = "connected",
    Disconnected = "disconnected",
    Message = "message"
}
/**
 * @deprecated use WSConnector
 */
export declare class WsClient extends EventEmitter {
    private socket;
    protected baseUrl: string;
    constructor(network: string);
    connect(): void;
    disconnect(): void;
    handleEvent(event: any): void;
    send(id: string, method: string, params: {}): void;
    subscribe(id: string, channelId: string): void;
    unsubscribe(id: string, channelId: string): void;
    subscribeMarketStats(): void;
    unsubscribeMarketStats(): void;
}
