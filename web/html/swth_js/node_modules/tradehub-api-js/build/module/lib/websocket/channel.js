import { WSChannel, } from './types';
export var generateChannelId = function (params) {
    switch (params.channel) {
        case WSChannel.candlesticks: {
            var _a = params, channel = _a.channel, market = _a.market, resolution = _a.resolution;
            return [channel, market, resolution].join('.');
        }
        case WSChannel.books: {
            var _b = params, channel = _b.channel, market = _b.market;
            return [channel, market].join('.');
        }
        case WSChannel.recent_trades: {
            var _c = params, channel = _c.channel, market = _c.market;
            return [channel, market].join('.');
        }
        case WSChannel.orders: {
            var _d = params, channel = _d.channel, address = _d.address;
            return [channel, address].join('.');
        }
        case WSChannel.orders_by_market: {
            var _e = params, channel = _e.channel, market = _e.market, address = _e.address;
            return [channel, market, address].join('.');
        }
        case WSChannel.balances: {
            var _f = params, channel = _f.channel, address = _f.address;
            return [channel, address].join('.');
        }
        case WSChannel.account_trades: {
            var _g = params, channel = _g.channel, address = _g.address;
            return [channel, address].join('.');
        }
        case WSChannel.account_trades_by_market: {
            var _h = params, channel = _h.channel, market = _h.market, address = _h.address;
            return [channel, market, address].join('.');
        }
        case WSChannel.market_stats: {
            var channel = params.channel;
            return [channel].join('.');
        }
        case WSChannel.market_stats_by_market: {
            var _j = params, channel = _j.channel, market = _j.market;
            return [channel, market].join('.');
        }
        case WSChannel.leverages: {
            var _k = params, channel = _k.channel, address = _k.address;
            return [channel, address].join('.');
        }
        case WSChannel.leverages_by_market: {
            var _l = params, channel = _l.channel, market = _l.market, address = _l.address;
            return [channel, market, address].join('.');
        }
        case WSChannel.positions: {
            var _m = params, channel = _m.channel, address = _m.address;
            return [channel, address].join('.');
        }
        case WSChannel.positions_by_market: {
            var _o = params, channel = _o.channel, market = _o.market, address = _o.address;
            return [channel, market, address].join('.');
        }
        default:
            throw new Error("invalid subscription channel: " + params.channel);
    }
};
export var parseChannelId = function (rawChannelId) {
    var _a = rawChannelId.split('.'), channel = _a[0], market = _a[1], resolution = _a[2], address = _a[3];
    switch (channel) {
        case WSChannel.candlesticks:
            return {
                channel: channel,
                market: market,
                resolution: resolution,
            };
        case WSChannel.books:
            return {
                channel: channel,
                market: market,
            };
        case WSChannel.recent_trades:
            return {
                channel: channel,
                market: market,
            };
        case WSChannel.orders:
            return {
                channel: channel,
                address: address,
            };
        case WSChannel.orders_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case WSChannel.balances:
            return {
                channel: channel,
                address: address,
            };
        case WSChannel.account_trades:
            return {
                channel: channel,
                address: address,
            };
        case WSChannel.account_trades_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case WSChannel.market_stats:
            return {
                channel: channel,
            };
        case WSChannel.market_stats_by_market:
            return {
                channel: channel,
                market: market,
            };
        case WSChannel.leverages:
            return {
                channel: channel,
                address: address,
            };
        case WSChannel.leverages_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        case WSChannel.positions:
            return {
                channel: channel,
                address: address,
            };
        case WSChannel.positions_by_market:
            return {
                channel: channel,
                market: market,
                address: address,
            };
        default:
            throw new Error('Error parsing channelId');
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbm5lbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvd2Vic29ja2V0L2NoYW5uZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsR0FNVixNQUFNLFNBQVMsQ0FBQTtBQUVoQixNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FBRyxVQUFDLE1BQTRCO0lBQzVELFFBQVEsTUFBTSxDQUFDLE9BQU8sRUFBRTtRQUN0QixLQUFLLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNyQixJQUFBLEtBQWtDLE1BQXVDLEVBQXZFLE9BQU8sYUFBQSxFQUFFLE1BQU0sWUFBQSxFQUFFLFVBQVUsZ0JBQTRDLENBQUE7WUFDL0UsT0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQy9DO1FBQ0QsS0FBSyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDZCxJQUFBLEtBQXNCLE1BQWdDLEVBQXBELE9BQU8sYUFBQSxFQUFFLE1BQU0sWUFBcUMsQ0FBQTtZQUM1RCxPQUFPLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtTQUNuQztRQUNELEtBQUssU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RCLElBQUEsS0FBc0IsTUFBdUMsRUFBM0QsT0FBTyxhQUFBLEVBQUUsTUFBTSxZQUE0QyxDQUFBO1lBQ25FLE9BQU8sQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQ25DO1FBQ0QsS0FBSyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDZixJQUFBLEtBQXVCLE1BQWlDLEVBQXRELE9BQU8sYUFBQSxFQUFFLE9BQU8sYUFBc0MsQ0FBQTtZQUM5RCxPQUFPLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxD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